import { LiveLogConfig } from "./config/LiveLogConfig";
import { LogLevel } from "./config/LogLevel";
import { LogMetadata } from "./config/LogMetadata";
import { Properties } from "./Properties";
/**
 * Logging levels conforms NPM logging levels
 */
export declare class LogEngine {
    protected instanceMetadata: LogMetadata;
    protected liveConfig: LiveLogConfig;
    protected logFn: (msg: string) => void;
    constructor(props: Properties | {
        clone: LogEngine;
        newMetadata: LogMetadata;
    });
    cloneWithMetadata(newMetadata: LogMetadata): LogEngine;
    getLevel(): LogLevel;
    getFormatName(): string;
    getMetadata(): LogMetadata;
    /**
     * Calls generator fn only if logging level is reached.
     */
    doEfficientLog(level: LogLevel, msgGeneratorFn: () => any[]): void;
    doLog(level: LogLevel, ...msgsObjs: any[]): void;
    private rawWriteToLog;
    private reevaluateConfigIfRequired;
}
