"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const UniverseLogError_1 = require("../error/UniverseLogError");
const isBrowser = new Function("try {return this===window;}catch(e){ return false;}");
const isNode = new Function("try {return this===global;}catch(e){return false;}");
const getWindow = new Function("try {return this;}catch(e){return undefined}");
function getBrowserEnv(name) {
    const probablyWindow = getWindow();
    if (!probablyWindow) {
        throw new UniverseLogError_1.UniverseLogError("PortableEnv: environment is browser, but could not get window object");
    }
    return probablyWindow[name];
}
function getNodeEnv(name) {
    if (!process) {
        throw new UniverseLogError_1.UniverseLogError("PortableEnv: environment is node, but process object does not exist");
    }
    if (!process.env) {
        throw new UniverseLogError_1.UniverseLogError("PortableEnv: environment is node, but process.env object does not exist");
    }
    if (process.env[name]) {
        return process.env[name];
    }
    else {
        return undefined;
    }
}
function PortableEnv(name) {
    if (isBrowser()) {
        return getBrowserEnv(name);
    }
    else if (isNode()) {
        return getNodeEnv(name);
    }
    else {
        throw new UniverseLogError_1.UniverseLogError("PortableEnv: unknown environment (not browser, not node)");
    }
}
exports.PortableEnv = PortableEnv;
//# sourceMappingURL=PortableEnv.js.map